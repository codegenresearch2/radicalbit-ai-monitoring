from pydantic import BaseModel, ConfigDict\\nfrom pydantic.alias_generators import to_camel\\\nfrom typing import Optional\\\n\\\nclass ModelQuality(BaseModel):\\\n    pass\\\n\\\nclass BinaryClassificationModelQuality(ModelQuality):\\\n    f1: float\\\n    accuracy: float\\\n    precision: float\\\n    recall: float\\\n    f_measure: float\\\n    weighted_precision: float\\\n    weighted_recall: float\\\n    weighted_f_measure: float\\\n    weighted_true_positive_rate: float\\\n    weighted_false_positive_rate: float\\\n    true_positive_rate: float\\\n    false_positive_rate: float\\\n    true_positive_count: int\\\n    false_positive_count: int\\\n    true_negative_count: int\\\n    false_negative_count: int\\\n    area_under_roc: Optional[float] = None\\\n    area_under_pr: Optional[float] = None\\\n\\\n    model_config = ConfigDict(\\\n        populate_by_name=True, alias_generator=to_camel, protected_namespaces=()\\\n    )\\\n\\\nclass MultiClassModelQuality(ModelQuality):\\\n    pass\\\n\\\nclass RegressionModelQuality(ModelQuality):\\\n    pass