from pydantic import BaseModel, ConfigDict\nfrom pydantic.alias_generators import to_camel\nfrom typing import Optional\n\nclass DatasetStats(BaseModel):\n    n_variables: int\n    n_observations: int\n    missing_cells: int\n    missing_cells_perc: Optional[float] = None\n    duplicate_rows: int\n    duplicate_rows_perc: Optional[float] = None\n    numeric: int\n    categorical: int\n    datetime: int\n\n    model_config = ConfigDict(populate_by_name=True, alias_generator=to_camel, protected_namespaces=())\n